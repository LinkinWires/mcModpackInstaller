//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mcModpackInstaller.Resources.Localizations.Tooltip {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Tooltip {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Tooltip() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("mcModpackInstaller.Resources.Localizations.Tooltip.Tooltip", typeof(Tooltip).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for settings of mods. Minecraft does not save its setting in this folder. Also worth mentioning that controls settings for mods are saved in the options.txt..
        /// </summary>
        internal static string TooltipConfig {
            get {
                return ResourceManager.GetString("TooltipConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for installing special mods which can not only add new code, but also change old. Usually those mods are libraries or APIs for other mods. With the release of Minecraft Forge for 1.6.1, coremods folder is not used anymore..
        /// </summary>
        internal static string TooltipCoremods {
            get {
                return ResourceManager.GetString("TooltipCoremods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for logs which contain all console output during game session. If you are not a tester, you can delete logs safely..
        /// </summary>
        internal static string TooltipLogs {
            get {
                return ResourceManager.GetString("TooltipLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for installing mods. Don&apos;t know what mods are? Why do you need this progam then? =).
        /// </summary>
        internal static string TooltipMods {
            get {
                return ResourceManager.GetString("TooltipMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File with all Minecraft options and also all controls settings for mods..
        /// </summary>
        internal static string TooltipOptionsTxt {
            get {
                return ResourceManager.GetString("TooltipOptionsTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for installing resource packs - official way for changing and adding new textures, sounds and models..
        /// </summary>
        internal static string TooltipResourcepacks {
            get {
                return ResourceManager.GetString("TooltipResourcepacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for worlds with associated to them datapacks and custom structures..
        /// </summary>
        internal static string TooltipSaves {
            get {
                return ResourceManager.GetString("TooltipSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for in-game screenshots made with pressing F2 key..
        /// </summary>
        internal static string TooltipScreenshots {
            get {
                return ResourceManager.GetString("TooltipScreenshots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for caching resource packs downloaded by servers during playtime on them. This is used, for example, in Cops and Crims mini-game on Hypixel..
        /// </summary>
        internal static string TooltipServerResourcePacks {
            get {
                return ResourceManager.GetString("TooltipServerResourcePacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File containing all info about Minecraft servers added by the user..
        /// </summary>
        internal static string TooltipServersDat {
            get {
                return ResourceManager.GetString("TooltipServersDat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Older copy of servers.dat backed up by Minecraft itself..
        /// </summary>
        internal static string TooltipServersDatOld {
            get {
                return ResourceManager.GetString("TooltipServersDatOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for shader packs - special mods for implementing modern graphical technologies, such as PBR or realistic shadows and water into Minecraft..
        /// </summary>
        internal static string TooltipShaderpacks {
            get {
                return ResourceManager.GetString("TooltipShaderpacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for modded structures. This folder does not change existing Minecraft structures and custom structures, which were created with use of structure block. (these are saved with the world in which they were created).
        /// </summary>
        internal static string TooltipStructures {
            get {
                return ResourceManager.GetString("TooltipStructures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder for texture packs - official way for changing and adding new textures. With the 13w24a snapshot for 1.6.1 texture packs were replaced by resource packs..
        /// </summary>
        internal static string TooltipTexturepacks {
            get {
                return ResourceManager.GetString("TooltipTexturepacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes remains of various mods..
        /// </summary>
        internal static string TooltipVariousMods {
            get {
                return ResourceManager.GetString("TooltipVariousMods", resourceCulture);
            }
        }
    }
}
